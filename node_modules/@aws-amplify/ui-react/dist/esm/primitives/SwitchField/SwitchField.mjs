import{__rest as e}from"tslib";import*as a from"react";import r from"classnames";import{classNameModifierByFlag as s,classNameModifier as i}from"@aws-amplify/ui";import{ComponentClassNames as t}from"../shared/constants.mjs";import{Flex as o}from"../Flex/Flex.mjs";import"../Field/FieldClearButton.mjs";import"../Field/FieldDescription.mjs";import{FieldErrorMessage as l}from"../Field/FieldErrorMessage.mjs";import{Input as c}from"../Input/Input.mjs";import{Label as d}from"../Label/Label.mjs";import{useStableId as m}from"../utils/useStableId.mjs";import{useSwitch as n}from"./useSwitch.mjs";import{View as h}from"../View/View.mjs";import{VisuallyHidden as p}from"../VisuallyHidden/VisuallyHidden.mjs";const b=a.forwardRef(((b,u)=>{var{className:k,defaultChecked:f,id:C,isChecked:w,isDisabled:S,isLabelHidden:F,label:g,labelPosition:j,name:E,onChange:N,size:T,thumbColor:y,trackCheckedColor:H,trackColor:L,value:v,hasError:x,errorMessage:D}=b,I=e(b,["className","defaultChecked","id","isChecked","isDisabled","isLabelHidden","label","labelPosition","name","onChange","size","thumbColor","trackCheckedColor","trackColor","value","hasError","errorMessage"]);const{isOn:M,changeHandler:V,isFocused:z,setIsFocused:B}=n({onChange:N,isChecked:w,defaultChecked:f,isDisabled:S}),O=m(C),P=F?p:h,W=r(t.SwitchTrack,s(t.SwitchTrack,"checked",M),s(t.SwitchTrack,"disabled",S),s(t.SwitchTrack,"focused",z),s(t.SwitchTrack,"error",x)),R=r(t.SwitchThumb,s(t.SwitchThumb,"checked",M),s(t.SwitchThumb,"disabled",S));return a.createElement(o,Object.assign({className:r(t.SwitchField,i(t.SwitchField,T),k),"data-size":T,"data-label-position":j,ref:u},I),a.createElement(p,null,a.createElement(c,{role:"switch",type:"checkbox",id:O,onChange:V,disabled:S,name:E,checked:M,value:v,onFocus:()=>{B(!0)},onBlur:()=>{B(!1)}})),a.createElement(d,{htmlFor:O,className:r(t.SwitchWrapper,i(t.SwitchWrapper,j)),"data-label-position":j},a.createElement(P,{as:"span",className:t.SwitchLabel},g),a.createElement(h,{as:"span",className:W,"data-checked":M,"data-disabled":S,"data-focused":z,backgroundColor:M?H:L},a.createElement(h,{as:"span",className:R,"data-checked":M,"data-disabled":S,backgroundColor:y}))),a.createElement(l,{hasError:x,errorMessage:D}))}));b.displayName="SwitchField";export{b as SwitchField};
